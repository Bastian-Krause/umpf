#!/bin/sh
#
# Extract the git bundle, prepare the git repository, and run a single test.
# This is intended to be run from the Meson test framework.
#
set -e

fail() {
	echo "$1"
	exit 1
}

TEST="$1"

if [ -z "$1" ]; then fail "usage: run-test <test>"; fi
if [ -z "${SOURCE_ROOT}" ]; then fail "SOURCE_ROOT not set"; fi
if [ -z "${TEST_DIR}" ]; then fail "TEST_DIR not set"; fi
if [ -z "${BUILD_DIR}" ]; then fail "BUILD_DIR not set"; fi
if [ ! -x "${SOURCE_ROOT}/umpf" ]; then fail "umpf not found in SOURCE_ROOT"; fi
if [ -z "$(command -v git)" ]; then fail "git not found in PATH"; fi

echo "---------------------------------------- preparing git repository"
rm -rf "${BUILD_DIR:?}/${TEST}"
git clone "${TEST_DIR}/test-git" "${BUILD_DIR}/${TEST}"
cp -r "${TEST_DIR}/rr-cache" "${BUILD_DIR}/${TEST}/.git/"
cd "${BUILD_DIR}/${TEST}"
git config --local user.name "UMPF Test Committer"
git config --local user.email "umpf@example.com"
git config --local advice.detachedHead false
git branch a origin/a
git branch b origin/b
cat > series <<EOF
# umpf-base: base
# umpf-name: name
# umpf-topic: a
# umpf-topic: b
# umpf-end
EOF

cat > series.conflict <<EOF
# umpf-base: base
# umpf-name: name
# umpf-topic: a2
# umpf-topic: a3
# umpf-topic: b
# umpf-end
EOF

echo "---------------------------------------- running test \"${TEST}\""
SOURCE_DATE_EPOCH="$(git log -1 --pretty=%ct umpf-tag)"
export SOURCE_DATE_EPOCH
export GIT_AUTHOR_DATE="${SOURCE_DATE_EPOCH}"
export GIT_COMMITTER_DATE="${SOURCE_DATE_EPOCH}"
export GIT_AUTHOR_EMAIL="umpf@example.com"
export GIT_AUTHOR_NAME="UMPF Test Committer"
export GIT_COMMITTER_EMAIL="umpf@example.com"
export GIT_COMMITTER_NAME="UMPF Test Committer"
export TZ="UTC"
PATH="${SOURCE_ROOT}:${PATH}"
set -x
# shellcheck source=/dev/null
. "${TEST_DIR}/${TEST}"
